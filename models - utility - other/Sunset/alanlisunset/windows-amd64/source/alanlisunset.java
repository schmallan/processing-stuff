/* autogenerated by Processing revision 1293 on 2024-09-04 */
import processing.core.*;
import processing.data.*;
import processing.event.*;
import processing.opengl.*;

import java.util.HashMap;
import java.util.ArrayList;
import java.io.File;
import java.io.BufferedReader;
import java.io.PrintWriter;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.IOException;

public class alanlisunset extends PApplet {

public void setup(){
  background(0xFFFFFFFF);
  /* size commented out by preprocessor */;
  strokeWeight(0);
  rectMode(CORNER);
  /* smooth commented out by preprocessor */;
  
  for (int i = 0; i<25; i++) 
  {
    int c = i-0;
    stroke(155+i*4,0,200-i*8);
    fill(155+i*4,0,200-i*8);
    rect(0,i*5,500,5);
  }
  
  for (int i = 25; i<60; i++) 
  {
    int inte = 7;
    int c = i-30;
    stroke(255,c*inte,l);
    fill(255,c*inte,l);
    rect(0,i*5,500,5);
  }  
  
  fill(0xFFFCF4D1);
  ellipse(250,300,80,80);
  
}


int l = 0;
public void draw(){
  int nume = (int)Math.round(Math.abs(250-mouseX)/9);
  
  
  rectMode(CORNER);
  int b = (int)Math.round(Math.random()*10);
  fill(10,10,60+b);
  rect(0,300,500,200);
  
  rectMode(CENTER);
  for (int i = 60; i<90; i++) 
  {
    int r = (int)Math.round(Math.random()*10);
    int c = 90-i;
    
    stroke(252,246,219,c*8);
    fill(252,246,219,c*8);
    rect(250,i*5,c*2+r*(2+nume),5);
  }  
  
  //exit();
  
  
}


  public void settings() { size(500, 500);
smooth(); }

  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "alanlisunset" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
